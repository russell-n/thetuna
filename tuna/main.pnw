The Main Entry Point
====================

This module bundles together the components needed to use the The Optimizer as a command-line command.

.. currentmodule:: tuna.main
.. autosummary::
   :toctree: api

   enable_debugging
   main
    
<<Name='imports', echo=False>>=
# this package
import tuna.infrastructure.arguments
from tuna.log_setter import set_logger
@
<<name='enable_debugging', echo=False>>=
def enable_debugging(args):
    """
    Enables interactive debugging

    :param:

     - `args`: A namespace with pudb and pdb attributes
    """
    if args.pudb:
        import pudb
        pudb.set_trace()
        return
    if args.pdb:
        import pdb
        pdb.set_trace()
    return
@
<<name='Main', echo=False>>=
def main():
    """
    The 'site-entry' point.

       1. Gets command-line arguments
       2. Sets the logger
       3. Enables debugging (if asked for)
       4. Calls the function set by the argparse subcommand
    """
    argue = tuna.infrastructure.arguments.ArgumentBuilder()
    args = argue()
    set_logger(args)
    enable_debugging(args)
    args.function(args)
    return
@

